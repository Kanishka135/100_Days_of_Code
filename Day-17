Platform-Leetcode
37. Sudoku Solver

class Solution {
public:
    bool isSafe(int row,int col,vector<vector<char>>& board,char value){
        for(int i=0;i<board.size();i++){
            if(board[row][i]==value){
                return false;
            }
            if(board[i][col]==value){
                return false;
            }
            if(board[3*(row/3)+(i/3)][3*(col/3)+(i%3)] == value) 
                return false;
        }
        return true;
    }

    bool solve(vector<vector<char>>& board){
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board.size();j++){
                if(board[i][j]=='.'){
                    for(char val='1';val<='9';val++){
                        if(isSafe(i,j,board,val)){
                            board[i][j]=val;
                            bool remainingBoardSolution = solve(board);
                            if(remainingBoardSolution == true){
                                return true;
                            }else{
                                board[i][j]='.';
                            }
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }

    void solveSudoku(vector<vector<char>>& board) {
        solve(board);
    }
};
